{"version":3,"sources":["webpack://suavecito-warehouse/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://suavecito-warehouse/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://suavecito-warehouse/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://suavecito-warehouse/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://suavecito-warehouse/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://suavecito-warehouse/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://suavecito-warehouse/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://suavecito-warehouse/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://suavecito-warehouse/./node_modules/@babel/runtime/regenerator/index.js","webpack://suavecito-warehouse/./node_modules/regenerator-runtime/runtime.js","webpack://suavecito-warehouse/webpack/bootstrap","webpack://suavecito-warehouse/webpack/runtime/compat get default export","webpack://suavecito-warehouse/webpack/runtime/define property getters","webpack://suavecito-warehouse/webpack/runtime/hasOwnProperty shorthand","webpack://suavecito-warehouse/webpack/runtime/make namespace object","webpack://suavecito-warehouse/./src/complete-account-setup.js"],"names":["validatePhone","phone","_phone","replace","length","formatPhone","areaCode","slice","firstThree","lastFour","phoneLength","countryCode","CompleteAccountSetup","data","React","useState","firstName","setFirstName","lastName","setLastName","email","setEmail","setPhone","isSubmitting","setIsSubmitting","handleSubmit","customerInput","id","customerId","fetch","method","headers","body","JSON","stringify","updateResponse","json","Json","customerUpdate","customer","userErrors","window","location","href","console","log","errors","i","message","alert","customerFirstName","e","target","value","customerPhone","marginBottom","loadingGifUrl","domContainer","document","querySelector","_data","dataset","ReactDOM","render"],"mappings":";;;;;;;;;;;;;;AAAe;AACf;;AAEA,wCAAwC,SAAS;AACjD;AACA;;AAEA;AACA,C;;;;;;;;;;;;;;;ACRe;AACf;AACA,C;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA,C;;;;;;;;;;;;;;;AClCe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA,C;;;;;;;;;;;;;;;ACbe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,+BAA+B;AAC5E;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,C;;;;;;;;;;;;;;;ACzBe;AACf;AACA,C;;;;;;;;;;;;;;;;;;;ACFuE;AACY;AACY;AACtB;AAC1D;AACf,SAAS,kFAAc,SAAS,wFAAoB,YAAY,8FAA0B,YAAY,mFAAe;AACrH,C;;;;;;;;;;;;;;;;ACN2E;AAC5D;AACf;AACA,oCAAoC,oFAAgB;AACpD;AACA;AACA;AACA,sFAAsF,oFAAgB;AACtG,C;;;;;;;;;;ACRA,gHAA+C;;;;;;;;;;;ACA/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,KAAK;AACL,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;;AAEA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,cAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,kBAAkB;AACnD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8CAA8C,QAAQ;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,CAAC;AACD;AACA;AACA;AACA;AACA,EAAE,KAA0B,oBAAoB,CAAE;AAClD;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;UC3uBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA;WACA,gCAAgC,YAAY;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;;AACA;AACA,SAASA,a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","file":"complete_account_setup.bundle.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* global React */\n/* global ReactDOM */\nfunction validatePhone(phone) {\n  // Remove any non-numeric characters\n  const _phone = phone.replace(/\\D/g, \"\")\n  if (_phone.length === 10) {\n    return true\n  }\n  if (_phone.length >= 11) {\n    return true\n  }\n}\n\nfunction formatPhone(phone) {\n  // Remove any non-numeric characters\n  const _phone = phone.replace(/\\D/g, \"\")\n  // Handle 10 digit phone numebers\n  if (_phone.length === 10) {\n    const areaCode = _phone.slice(0, 3)\n    const firstThree = _phone.slice(3, 6)\n    const lastFour = _phone.slice(6, 10)\n    return `+1${areaCode}${firstThree}${lastFour}`\n    // Handle phone numbers with a country code\n  }\n  if (phone.length >= 11) {\n    let phoneLength = _phone.length\n    const lastFour = _phone.slice(_phone.length - 4, _phone.length)\n    phoneLength -= 4\n    const firstThree = _phone.slice(phoneLength - 3, phoneLength)\n    phoneLength -= 3\n    const areaCode = _phone.slice(phoneLength - 3, phoneLength)\n    phoneLength -= 3\n    const countryCode = _phone.slice(0, phoneLength)\n    return `+${countryCode}${areaCode}${firstThree}${lastFour}`\n    // Handle numbers too short to be a phone number\n  }\n  return \"\"\n}\n\nfunction CompleteAccountSetup({ data }) {\n  const [firstName, setFirstName] = React.useState(\"\")\n  const [lastName, setLastName] = React.useState(\"\")\n  const [email, setEmail] = React.useState(\"\")\n  const [phone, setPhone] = React.useState(\"\")\n  const [isSubmitting, setIsSubmitting] = React.useState(\"\")\n\n  const handleSubmit = async () => {\n    const customerInput = { email }\n    customerInput.id = data.customerId\n    if (firstName) customerInput.firstName = firstName\n    if (lastName) customerInput.lastName = lastName\n    if (phone && validatePhone(phone)) {\n      customerInput.phone = formatPhone(phone)\n    }\n    if (email) {\n      try {\n        setIsSubmitting(true)\n        const updateResponse = await fetch(\n          \"https://api.suavecito.com/api/shopify/warehouse/update-customer\",\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(customerInput),\n          }\n        )\n        const Json = await updateResponse.json()\n        if (\n          Json.data.customerUpdate.customer &&\n          !Json.data.customerUpdate.userErrors.length\n        ) {\n          window.location.href = \"/\"\n        }\n        if (Json.data.customerUpdate.userErrors.length) {\n          console.log(Json)\n          let errors = \"Something went wrong, please try again. \"\n          for (let i = 0; i < Json.data.customerUpdate.userErrors.length; i++) {\n            errors += `${Json.data.customerUpdate.userErrors[i].message}. `\n          }\n          alert(errors)\n          setIsSubmitting(false)\n        }\n        console.log(Json)\n      } catch (error) {\n        alert(`Something went wrong. Please try again later. Error: ${error}`)\n        console.log(error)\n        setIsSubmitting(false)\n      }\n    } else {\n      alert(\"Please fill out all required fields.\")\n    }\n  }\n\n  return (\n    <>\n      <h3>Complete your account setup</h3>\n      <form id=\"UpdateCustomer\">\n        {!data.customerFirstName ||\n          (data.customerFirstName === \"First Name\" && (\n            <>\n              <div className=\"form-group\">\n                <label htmlFor=\"FirstName\">\n                  First Name <br />\n                  <input\n                    id=\"FirstName\"\n                    className=\"input--error\"\n                    type=\"text\"\n                    onInput={e => setFirstName(e.target.value)}\n                  />\n                </label>\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"LastName\">\n                  Last Name <br />\n                  <input\n                    id=\"LastName\"\n                    className=\"input--error\"\n                    type=\"text\"\n                    onInput={e => setLastName(e.target.value)}\n                  />\n                </label>\n              </div>\n            </>\n          ))}\n\n        <div className=\"form-group\">\n          <label htmlFor=\"CustomerEmail\">\n            Email <br />\n            <input\n              id=\"CustomerEmail\"\n              className=\"input--error\"\n              type=\"text\"\n              onInput={e => setEmail(e.target.value)}\n            />\n          </label>\n        </div>\n\n        {!data.customerPhone && (\n          <div className=\"form-group\">\n            <label htmlFor=\"CustomerPhone\">\n              Phone <br />\n              <input\n                id=\"CustomerPhone\"\n                className=\"input--error\"\n                type=\"text\"\n                onInput={e => setPhone(e.target.value)}\n              />\n            </label>\n          </div>\n        )}\n\n        <div className=\"form-group\">\n          {!isSubmitting ? (\n            <input\n              type=\"button\"\n              className=\"btn\"\n              onClick={handleSubmit}\n              value=\"Submit\"\n            />\n          ) : (\n            <p className=\"v-center\" style={{ marginBottom: \"0.75rem\" }}>\n              Submitting <img src={data.loadingGifUrl} alt=\"loading\" />\n            </p>\n          )}\n        </div>\n      </form>\n    </>\n  )\n}\n\nconst domContainer = document.querySelector(\"#CompleteAccountSetup\")\nconst _data = domContainer.dataset\nReactDOM.render(<CompleteAccountSetup data={_data} />, domContainer)\n"],"sourceRoot":""}